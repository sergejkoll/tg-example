// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"

	"github.com/rs/zerolog"
	"github.com/sergejkoll/tg-example/pkg/interfaces"
)

type serverAdder struct {
	svc           interfaces.Adder
	sumTwoNumbers AdderSumTwoNumbers
}

type MiddlewareSetAdder interface {
	Wrap(m MiddlewareAdder)
	WrapSumTwoNumbers(m MiddlewareAdderSumTwoNumbers)

	WithLog(log zerolog.Logger)
}

func newServerAdder(svc interfaces.Adder) *serverAdder {
	return &serverAdder{
		sumTwoNumbers: svc.SumTwoNumbers,
		svc:           svc,
	}
}

func (srv *serverAdder) Wrap(m MiddlewareAdder) {
	srv.svc = m(srv.svc)
	srv.sumTwoNumbers = srv.svc.SumTwoNumbers
}

func (srv *serverAdder) SumTwoNumbers(ctx context.Context, first int, second int) (result int, err error) {
	return srv.sumTwoNumbers(ctx, first, second)
}

func (srv *serverAdder) WrapSumTwoNumbers(m MiddlewareAdderSumTwoNumbers) {
	srv.sumTwoNumbers = m(srv.sumTwoNumbers)
}

func (srv *serverAdder) WithLog(log zerolog.Logger) {
	srv.Wrap(loggerMiddlewareAdder(log))
}
